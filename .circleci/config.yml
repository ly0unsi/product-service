version: 2.1

jobs:
  build:
    docker:
      - image: circleci/openjdk:17-jdk # Use a Docker image with JDK 8
    steps:
      - checkout # Checkout the source code
      - run:
          name: Build and Package
          command: mvn spring-boot:build-image -DskipTests # Build the Spring Boot application

  deploy:
    docker:
      - image: microsoft/azure-cli:latest # Use Azure CLI image for deployment
    steps:
      - checkout # Checkout the source code
      - run:
          name: Deploy to AKS
          command: |
            az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
            az aks get-credentials --resource-group $RESOURCE_GROUP --name $AKS_CLUSTER_NAME
            kubectl apply -f .\k8s\deployment.yaml  # Apply your Kubernetes deployment configuration
            kubectl apply -f .\k8s\service.yaml  # Apply your Kubernetes deployment configuration

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - main # Adjust branch as needed
